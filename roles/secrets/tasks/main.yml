# These are secrets that only need to be known by the host, so we can set them
# to a random string.
- name: Create random postgresql password for ckan
  set_fact:
    cacheable: false
    POSTGRESQL_CKAN_PASSWORD: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=64) }}"

- name: Create random CSRF key
  set_fact:
    cacheable: false
    CKAN_INI_WTF_CSRF_SECRET_KEY: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=64) }}"

- block:
    - name: Create random MinIO root password
      set_fact:
        cacheable: false
        MINIO_ROOT_PASSWORD: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=64) }}"

    - name: Create random MinIO access key id and secret
      set_fact:
        cacheable: false
        DCOR_S3_SECRET_ACCESS_KEY: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=64) }}"
  when: DCOR_USE_LOCAL_MINIO | bool

- name: Read secrets from vault
  block:
    - name: Check if vault file exists
      local_action:
        module: stat
        path: "{{ playbook_dir }}/vault/{{ inventory_hostname }}.yml"
      register: vault_file_status
    - name: Include vault variables if the file exists
      include_vars:
        file: "{{ playbook_dir }}/vault/{{ inventory_hostname }}.yml"
      when: vault_file_status.stat.exists
    - name: Test vault
      debug:
        msg: "File exists: {{ playbook_dir }}/vault/{{ inventory_hostname }}.yml {{ vault_file_status.stat.exists }}"
