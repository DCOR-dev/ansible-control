- name: Install Python 3
  ansible.builtin.apt:
    name:
    - gcc
    - python3
    - python-is-python3
    - python3-pip
    - python3-dev
    - python3-venv
    - build-essential
    state: latest
- name: Install other requirements
  ansible.builtin.apt:
    name: wget
    state: latest
- name: Create install directory
  ansible.builtin.file:
    path: "{{ ANSIBLE_DOWNLOAD_DIR }}"
    state: directory
- name: Download CKAN
  ansible.builtin.get_url:
    url: "https://packaging.ckan.org/{{ CKAN_DEB_NAME  }}"
    dest: "{{ ANSIBLE_DOWNLOAD_DIR }}{{ CKAN_DEB_NAME }}"
    checksum: md5:{{ CKAN_DEB_MD5 }}
    mode: '0400'
- name: Install CKAN
  ansible.builtin.apt:
    deb: "{{ ANSIBLE_DOWNLOAD_DIR }}{{ CKAN_DEB_NAME }}"
- name: Create CKAN_INI_STORAGE_PATH directory
  ansible.builtin.file:
    path: "{{ CKAN_INI_STORAGE_PATH }}"
    state: directory
    mode: '0750'
    group: 'www-data'
    owner: 'www-data'
- name: CKAN_INI ckan.storage_path
  community.general.ini_file:
    path: "{{ CKAN_INI }}"
    section: "app:main"
    option: ckan.storage_path
    value: "/data/ckan-{{ ansible_hostname }}"
- name: CKAN_INI ckan.site_url
  community.general.ini_file:
    path: "{{ CKAN_INI }}"
    section: "app:main"
    option: ckan.site_url
    value: "{{ CKAN_SITE_URL }}"
- name: CKAN_INI set sqlalchemy.url
  community.general.ini_file:
    path: "{{ CKAN_INI }}"
    section: "app:main"
    option: sqlalchemy.url
    value: "postgresql://{{ POSTGRESQL_CKAN_USER }}:{{ POSTGRESQL_CKAN_PASSWORD }}@localhost/{{ POSTGRESQL_CKAN_DATABASE }}"
- name: Initialize/Upgrade CKAN database
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: | 
      source {{ CKAN_ENVIRONMENT_ACTIVATE }}
      ckan db init
  environment:
    CKAN_INI: "{{ CKAN_INI }}"
- name: Reload nginx
  ansible.builtin.service:
    name: nginx
    state: reloaded
    enabled: true
- name: Restart CKAN via supervisor
  community.general.supervisorctl:
    name: all
    state: restarted
